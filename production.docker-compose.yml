services:
  postgres:
    container_name: "snaily-cad-postgres"
    image: postgres:latest
    environment:
      POSTGRES_PORT: ${DB_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    ports:
      - "${DB_PORT}:5432"
    expose:
      - ${DB_PORT}
    networks:
      - cad_web
    volumes:
      - ./.data:/var/lib/postgresql/data
    restart: unless-stopped

  api:
    container_name: "snaily-cad-api"
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./Dockerfile
      target: api
    ports:
      - "${PORT_API}:${PORT_API}"
    expose:
      - ${PORT_API}
    depends_on:
      - postgres
    networks:
      - cad_web
    restart: always
    volumes:
      - ./apps/api/public:/snailycad/apps/api/public
    labels:
      - "traefik.enable=${TRAEFIK_ENALBED}"
      - "traefik.http.routers.snaily-cad-api.entrypoints=web"
      - "traefik.http.routers.snaily-cad-api.rule=Host(`${DOCKER_API_DOMAIN}`)"

  client:
    container_name: "snaily-cad-client"
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./Dockerfile
      target: client
    ports:
      - "${PORT_CLIENT}:${PORT_CLIENT}"
    expose:
      - ${PORT_CLIENT}
    depends_on:
      - postgres
    networks:
      - cad_web
    restart: always
    labels:
      - "traefik.enable=${TRAEFIK_ENALBED}"
      - "traefik.http.routers.snaily-cad-client.entrypoints=web"
      - "traefik.http.routers.snaily-cad-client.rule=Host(`${DOCKER_CLIENT_DOMAIN}`)"

  traefik:
    container_name: "snaily-cad-traefik"
    image: traefik
    command:
      - "--api.dashboard=${TRAEFIK_ENALBED}"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.traefik.address=:8080"

    ports:
      - "80:80"
      - "443:443"
      - "9383:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./.docker-config/letsencrypt:/letsencrypt"
    networks:
      - cad_web
    restart: always

networks:
  cad_web:
    external: true
